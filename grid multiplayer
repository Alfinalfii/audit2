<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Synced Media Players</title>
    <style>
        body {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            grid-template-rows: repeat(2, 1fr);
            gap: 10px;
            margin: 0;
        }

        .video-container {
            position: relative;
            width: 100%;
            height: 50vh; /* 50% of the viewport height */
            overflow: hidden;
        }

        video {
            width: 100%;
            height: 100%;
        }

        .controls {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: space-between;
        padding: 5px;
        box-sizing: border-box;
        color: white;
}

.play-pause {
    display: flex;
    align-items: center;
    justify-content: center; /* Center the play/pause button */
    flex-grow: 1; /* Allow the play/pause section to grow and fill available space */
}

.play-pause button {
    margin-right: 10px; /* Adjust the margin as needed */
}

.speed-controls {
    display: flex;
    align-items: center;
}


 .speed-button {
            margin-right: 5px;
        }
</style>
</head>
<body>
    <div class="video-container">
        <input type="file" accept="video/*" onchange="loadVideo('video1', this)">
        <video id="video1" controls>
            <source src="" type="video/mp4">
            <source src="" type="video/webm">
            <source src="" type="video/ogg">
        </video>
        <div class="controls">
            <div class="play-pause">
            <button onclick="playPause('video1')">Play/Pause</button></div>
            <div class="speed-controls">
                <button class="speed-button" onclick="decreaseSpeed('video1')">-</button>
                <span id="speedDisplay1">1x</span>
                <button class="speed-button" onclick="increaseSpeed('video1')">+</button>
            </div>
            <input type="range" id="volume1" min="0" max="1" step="0.1" value="1" oninput="setVolume('video1', this.value)">
        </div>
    </div>

    <div class="video-container">
        <input type="file" accept="video/*" onchange="loadVideo('video2', this)">
        <video id="video2" controls>
            <source src="" type="video/mp4">
            <source src="" type="video/webm">
            <source src="" type="video/ogg">
        </video>
        <div class="controls">
            <div class="play-pause">
            <button onclick="playPause('video2')">Play/Pause</button></div>
            <div class="speed-controls">
                <button class="speed-button" onclick="decreaseSpeed('video2')">-</button>
                <span id="speedDisplay2">1x</span>
                <button class="speed-button" onclick="increaseSpeed('video2')">+</button>
            </div>
            <input type="range" id="volume2" min="0" max="1" step="0.1" value="1" oninput="setVolume('video2', this.value)">
        </div>
    </div>


    <div class="video-container">
        <input type="file" accept="video/*" onchange="loadVideo('video3', this)">
        <video id="video3" controls>
            <source src="" type="video/mp4">
            <source src="" type="video/webm">
            <source src="" type="video/ogg">
        </video>
        <div class="controls">
            <div class="play-pause">
            <button onclick="playPause('video3')">Play/Pause</button></div>
            <div class="speed-controls">
                <button class="speed-button" onclick="decreaseSpeed('video3')">-</button>
                <span id="speedDisplay3">1x</span>
                <button class="speed-button" onclick="increaseSpeed('video3')">+</button>
            </div>
            <input type="range" id="volume3" min="0" max="1" step="0.1" value="1" oninput="setVolume('video3', this.value)">
        </div>
    </div>

    <div class="video-container">
        <input type="file" accept="video/*" onchange="loadVideo('video4', this)">
        <video id="video4" controls>
            <source src="" type="video/mp4">
            <source src="" type="video/webm">
            <source src="" type="video/ogg">
        </video>
        <div class="controls">
            <div class="play-pause">
            <button onclick="playPause('video4')">Play/Pause</button></div>
            <div class="speed-controls">
                <button class="speed-button" onclick="decreaseSpeed('video4')">-</button>
                <span id="speedDisplay4">1x</span>
                <button class="speed-button" onclick="increaseSpeed('video4')">+</button>
            </div>
            <input type="range" id="volume4" min="0" max="1" step="0.1" value="1" oninput="setVolume('video4', this.value)">
        </div>
    </div>

    <!-- Add more video containers as needed -->

    <script>
        var videos = ['video1', 'video2', 'video3', 'video4'];
        var speeds = { 'video1': 1, 'video2': 1, 'video3': 1, 'video4': 1 };

        function playPause(videoId) {
            var video = document.getElementById(videoId);
            if (video.paused) {
                video.play();
            } else {
                video.pause();
            }
        }

        function setVolume(videoId, volume) {
            var video = document.getElementById(videoId);
            video.volume = volume;
        }

        function loadVideo(videoId, input) {
            var video = document.getElementById(videoId);
            var file = input.files[0];

            if (file) {
                var objectURL = URL.createObjectURL(file);
                var sources = video.getElementsByTagName('source');

                for (var i = 0; i < sources.length; i++) {
                    sources[i].src = objectURL;
                }

                video.load();
            }
        }

        function syncVideos(action) {
            videos.forEach(function (videoId) {
                var video = document.getElementById(videoId);

                if (action === 'pause') {
                    video.pause();
                } else if (action === 'forward') {
                    video.currentTime += 5;
                } else if (action === 'backward') {
                    video.currentTime -= 5;
                }
            });
        }

        function increaseSpeed(videoId) {
            var video = document.getElementById(videoId);
            speeds[videoId] += 0.5;
            video.playbackRate = speeds[videoId];
            document.getElementById('speedDisplay' + videoId.charAt(videoId.length - 1)).innerText = speeds[videoId] + 'x';
        }

        function decreaseSpeed(videoId) {
            var video = document.getElementById(videoId);
            speeds[videoId] -= 0.5;
            video.playbackRate = speeds[videoId];
            document.getElementById('speedDisplay' + videoId.charAt(videoId.length - 1)).innerText = speeds[videoId] + 'x';
        }

        document.addEventListener('keydown', function (event) {
            if (event.code === 'Space') {
                event.preventDefault();
                videos.forEach(function (videoId) {
                    playPause(videoId);
                });
            } else if (event.code === 'ArrowRight') {
                syncVideos('forward');
            } else if (event.code === 'ArrowLeft') {
                syncVideos('backward');
            }
        });
    </script>
</body>
</html>
